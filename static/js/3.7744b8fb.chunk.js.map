{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","cover_image","src","descriptionBlock","photos","large","Preloader","Post","item","alt","message","likeCount","comments","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Texarea","name","placeholder","validate","required","MyPosts","postsElements","posts","reverse","map","p","key","id","React","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","getUsersProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.7744b8fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover_image\":\"ProfileInfo_cover_image__3eF2B\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3tEU-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2gq7w\",\"posts\":\"MyPosts_posts__21fZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3dOjk\"};","\r\nimport React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n      let [editMode, setEditMode] = useState(false);\r\n      let [status, setStatus] = useState(props.status);\r\n\r\n      useEffect(() => {\r\n            setStatus(props.status);\r\n      }, [props.status])\r\n\r\n      const activatedEditMode = () => {\r\n            setEditMode(true);\r\n      }\r\n\r\n      const deactiveEditMode = () => {\r\n            setEditMode(false);\r\n            props.updateStatus(status);\r\n      }\r\n\r\n      const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value);\r\n      }\r\n\r\n      return  (\r\n            <div>\r\n                  {!editMode &&\r\n                        <div>\r\n                              <span onDoubleClick={activatedEditMode} >{props.status || 'No status'}</span>\r\n                        </div>\r\n                  }\r\n                  {editMode &&\r\n                        <div>\r\n                              <input  autoFocus={true} onBlur={deactiveEditMode} onChange={onStatusChange}\r\n                              value={status}/>\r\n                        </div>\r\n                  }\r\n            </div>\r\n      )           \r\n}\r\n\r\nexport default ProfileStatusWithHooks;","\r\nimport React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader.js';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n      if (!profile) {\r\n            return <Preloader />\r\n      }\r\n\r\n    return  (\r\n      <div>\r\n            {<div className={s.cover_image} >\r\n                  <img src=\"https://abduzeedo.com/sites/default/files/originals/0ec5c569226647.5b79b483096c1.jpg\" />\r\n            </div>}\r\n            <div className={s.descriptionBlock}>\r\n                  <img src={profile.photos.large} />\r\n                  <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div> \r\n      </div>)\r\n}\r\n\r\nexport default ProfileInfo;","\r\nimport React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n      <div className={s.item}>\r\n            <img src=\"https://i.pinimg.com/originals/13/04/f2/1304f2e4626bdbe0070fef0b9756408d.jpg\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n              <span>Like</span> {props.likeCount}\r\n              <span> Comments</span> {props.comments}\r\n            </div>\r\n      </div>\r\n   )         \r\n}\r\n\r\nexport default Post;","\r\nimport React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {required, maxLengthCreator} from '../../../utils/validators/validators';\r\nimport {Texarea} from '../../common/FormsControls/FormsControls'\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return  <form onSubmit={props.handleSubmit} >\r\n               <div>\r\n                  <Field  component={Texarea} name='newPostText' placeholder={'Post Message'} validate={[required, maxLength10]} />\r\n               </div>\r\n               <div>\r\n                     <button>Add post</button>\r\n               </div>\r\n            </form>\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = \r\n        [...props.posts]\r\n            .reverse()\r\n            .map (p => <Post message={p.message} likeCount={p.likeCount} key={p.id} comments= {p.comments} /> );\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n       props.addPost(values.newPostText);\r\n  }\r\n\r\n\treturn <div className={s.postsBlock}>\r\n                <div>\r\n                     <h2>My posts</h2>\r\n                     <AddNewPostFormRedux onSubmit={onAddPost} />\r\n                </div>\r\n                <div className={s.posts}>\r\n                     { postsElements }\r\n                </div>\r\n            </div>\r\n}\r\n\r\n\r\n\r\nexport default MyPosts;","\r\nimport React from 'react';\r\nimport MyPosts from './MyPosts.jsx';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer.js';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return  {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n          addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n          }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","\r\nimport React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return  (\r\n      <div >\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer /> \r\n      </div>)\r\n}\r\n\r\nexport default Profile;","\r\nimport React from 'react';\r\nimport Profile from './Profile.jsx';\r\nimport {connect} from 'react-redux';\r\nimport {getUsersProfile, getStatus, updateStatus} from '../../redux/profile-reducer.js';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\tcomponentDidMount () {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.autorizedUserId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push('/login')\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUsersProfile(userId);\r\n\t\tthis.props.getStatus(userId);\r\n\t}\r\n \r\n\trender () {\r\n\t\t return  (\r\n\t\t            <Profile {...this.props} profile={this.props.profile} \r\n\t\t            status={this.props.status} updateStatus={this.props.updateStatus} />\r\n\t\t\t)\r\n\t\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tautorizedUserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {getUsersProfile, getStatus, updateStatus}),\r\n\twithRouter,\r\n\t// withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}